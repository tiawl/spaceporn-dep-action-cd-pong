name: 'ci'
description: 'Run CI test for CD ping'
inputs:
  from:
    description: 'The ping sender'
    required: true
  is_composite:
    description: 'Is the ping sender this a composite action ?'
    required: false
    default: 'false'
  to:
    description: 'The ping receiver'
    required: true
  token:
    description: 'The github token'
    required: true
runs:
  using: "composite"
  steps:
    - uses: tiawl/spaceporn-action-env@v1.0.4
    - uses: mlugg/setup-zig@v1
      if: inputs.is_composite != 'true'
      with:
        version: ${{ env.zig_version }}

    - uses: actions/checkout@v4
      with:
        repository: "${{ github.repository_owner }}/${{ inputs.to }}"

    - name: Search current tag selected by the ping receiver
      id: used
      env:
        FROM: "${{ github.repository_owner }}/${{ inputs.from }}"
      shell: bash
      run: |
        tag="$(grep -h -o -R "${FROM}@v\S\+" | sed "s#^${FROM}@##" | sort -u || :)"
        printf 'tag=%s\n' "${tag}" >> "${GITHUB_OUTPUT}"

    - uses: actions/checkout@v4
      with:
        repository: "${{ github.repository_owner }}/${{ inputs.from }}"
        fetch-depth: 0
        fetch-tags: true

    - name: Prepare CD
      id: prepare
      env:
        IS_COMPOSITE: "${{ inputs.is_composite }}"
        URL: "${{ github.server_url }}/${{ github.repository_owner }}/${{ inputs.from }}/archive/refs/tags"
        USED: "${{ steps.used.outputs.tag }}"
      shell: bash
      run: |
        tags="$(git tag --points-at "$(git describe --tags --abbrev=0 2> /dev/null)" 2> /dev/null | wc -l || :)"
        if [[ "${tags}" == '1' ]]; then tag="$(git describe --tags --abbrev=0)"; fi
        git show-ref --tags "${tag:-"${USED}"}"
        git checkout "${tag:-"${USED}"}"
        hash="$(if [[ "${IS_COMPOSITE}" != 'true' ]]; then zig fetch "${URL}/${tag:-"${USED}"}.tar.gz"; fi)"
        printf 'hash=%s\n' "${hash}" >> "${GITHUB_OUTPUT}"
        printf 'tag=%s\n' "${tag:-"${USED}"}" >> "${GITHUB_OUTPUT}"

    - uses: actions/checkout@v4
    - uses: ./
      with:
        to: "${{ github.repository_owner }}/${{ inputs.to }}"
        from: "${{ inputs.from }}"
        tag: "${{ steps.prepare.outputs.tag }}"
        hash: "${{ steps.prepare.outputs.hash }}"
        token: "${{ inputs.token }}"
